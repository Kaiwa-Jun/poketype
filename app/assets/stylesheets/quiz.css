@media (max-width: 480px) {
  .pokemon-grid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr; /* すべての列に同じ比率で空間を割り当て */
    gap: 5px; /* セル間の隙間 */
  }
  .pokemon-cell::before {
    padding-top: 100%; /* 既存のスタイルを維持 */
  }
  .pokemon-cell img {
    object-fit: cover; /* 既存のスタイルを維持 */
  }
}

.question {
  margin-top: 15px;
  margin-bottom: 5px;
  font-size: 16px;
  color: hsl(0, 0%, 100%);
  font-weight: bold;
  background-color: #4990e2;
  text-align: left; /* 左寄せ */
  padding: 20px;
}

.type-name {
  font-size: 30px; /* タイプ名のフォントサイズを大きく */
  margin-bottom: 10px; /* タイプ名とタイプ相性の間隔を開ける */
}

.pokemon-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr); /* 3列に分割 */
  gap: 5px; /* セル間の隙間 */
}

.pokemon-cell {
  width: 100%;
  position: relative;
  display: inline-block; /* 追加 */
  background-color: #e0e0e0;
}

.pokemon-cell::before {
  content: "";
  display: block;
  padding-top: 100%;
  float: left; /* 追加 */
}

.pokemon-cell img {
  position: relative; /* absoluteからrelativeに変更 */
  width: 100%;
  height: 100%;
  object-fit: cover;
  cursor: pointer;
}

.separator-line {
  height: 1px; /* 線の太さ */
  background-color: #e0e0e0; /* グレーの色 */
  margin: 10px 0; /* 上下のマージン */
}

#confirm-button-container {
  text-align: right; /* ボタンを右寄せにする */
  margin-top: 120px; /* 画像エリアとの間隔を開ける */
}

#confirm {
  width: 100px;
  display: inline-block; /* インライン要素として表示 */
  background-color: #4990e2; /* 水色 */
  color: #ffffff; /* 文字色は白 */
  border: none; /* 枠なし */
  box-shadow: none; /* 影なし */
  padding: 10px 20px; /* ボタンの内側の余白（調整が必要な場合は変更） */
  cursor: pointer; /* ホバー時にカーソルをポインターに */
  transition: background-color 0.3s; /* 背景色の変化を滑らかに */
}

#confirm:hover {
  background-color: #a0c4e2;
}

#confirm-button-container {
  margin-top: 10px;
  text-align: right;
}

#button-and-icons {
  display: flex; /* フレックスボックスを使用 */
  justify-content: space-between; /* 確認ボタンとアイコンコンテナを両端に配置 */
  align-items: center; /* アイテムを中央揃えに */
}

#icon-container {
  display: flex; /* フレックスボックスを使用 */
  justify-content: flex-start; /* アイコンを左寄せに */
  padding-left: 10px; /* アイコンとボタンの間隔を開ける */
}

.icon {
  margin-right: 20px; /* アイコン間の間隔を設定 */
  width: 30px; /* アイコンの幅を設定 */
  height: 30px; /* アイコンの高さを設定 */
}

.rotate-icon {
  transform: rotate(45deg); /* 90度回転 */
}

.answers {
  padding: 0;
}
.answer {
  list-style: none;
  margin-bottom: 10px;
  padding-top: 60px;
}

.answer .pokemon-cell img.pokemon-image {
  width: 100%;
  height: 80%; /* 画像の高さを縮小 */
}

.answer .pokemon-types {
  display: flex; /* フレックスボックスを使用 */
  justify-content: center; /* 中央寄せ */
  margin-top: 5px; /* 上部の余白 */
}

/* タイプカラー */
.type-dark {
  background-color: #705848;
}
.type-rock {
  background-color: #b8a038;
}
.type-psychic {
  background-color: #f85888;
}
.type-fighting {
  background-color: #c03028;
}
.type-grass {
  background-color: #78c850;
}
.type-ghost {
  background-color: #705898;
}
.type-ice {
  background-color: #98d8d8;
}
.type-ground {
  background-color: #e0c068;
}
.type-electric {
  background-color: #f8d030;
}
.type-poison {
  background-color: #a040a0;
}
.type-dragon {
  background-color: #7038f8;
}
.type-normal {
  background-color: #a8a878;
}
.type-steel {
  background-color: #b8b8d0;
}
.type-flying {
  background-color: #a890f0;
}
.type-fairy {
  background-color: #ee99ac;
}
.type-fire {
  background-color: #f08030;
}
.type-water {
  background-color: #6890f0;
}
.type-bug {
  background-color: #a8b820;
}

.selected .checkmark {
  display: block; /* チェックマークを表示 */
}

.checkmark {
  display: none; /* デフォルトでは非表示 */
  position: absolute; /* 絶対位置指定 */
  top: 5px; /* 左上に配置 */
  left: 5px;
  width: 24px; /* アイコンサイズ */
  height: 24px; /* アイコンサイズ */
}

.badge {
  display: inline-block;
  margin-top: 5px; /* 画像との間隔 */
  padding: 2px 8px; /* 内側の余白 */
  /* その他のスタイリング（背景色、文字色など） */
}

.button-container {
  text-align: center; /* ボタンを中央寄せ */
  margin-top: 20px; /* 上部の余白 */
}

.btn {
  margin-right: 10px; /* ボタン間の余白 */
  margin-left: 10px; /* ボタン間の余白 */
}

.btn-share {
  background-color: #f2f2f2; /* 任意の背景色 */
  color: black; /* 任意の文字色 */
}

/* プログレスバー */
.progress-container {
  display: flex;
  justify-content: space-between;
  width: 95%; /* 全体の横幅を縮める */
  margin: 0 auto; /* 中央寄せ */
  margin-top: 20px; /* 上部の余白 */
  margin-bottom: 20px; /* 下部の余白 */
}

.progress-bar {
  width: 18%; /* 5つなので20%ずつにすることもできますが、少し隙間を作るために18%に設定 */
  height: 10px; /* バーの高さを細くする */
  background-color: #e0e0e0; /* 初期状態の色 */
  border-radius: 5px; /* 角を丸くする */
}

.progress-bar.active {
  background-color: #4990e2; /* アクティブな状態の色 */
}

.progress-bar span {
  color: white; /* テキストの色を白にする */
  font-size: 12px; /* フォントサイズを小さく（必要に応じて） */
}

/* 円形プログレスバーのスタイル */
.progress-circle {
  position: relative;
  width: 100px;
  height: 100px;
}

.progress-svg {
  width: 100%;
  height: 100%;
  transform: rotate(-90deg); /* ここで90度反時計回りに回転 */
}

.progress-background,
.progress-bar {
  fill: none;
  stroke-width: 5;
}

.progress-background {
  stroke: #eee;
}

.progress-bar {
  stroke: #4990e2;
  stroke-dasharray: 301.6px; /* 円周 = 2 * π * r (r=48) */
  stroke-dashoffset: 301.6px; /* 初期状態でのオフセット（円周と同じ値） */
}

.progress-text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 14px;
  text-align: center;
  line-height: 1.2; /* 行の高さを調整 */
}

.big-number {
  font-size: 24px;
}

/* 画面中央に配置するためのスタイル */
.progress-circle-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 15vh; /* 画面の高さに合わせる */

  /* 円形プログレスバーのスタイリング */
  .circular-progress-container {
    position: relative;
    width: 200px;
    height: 200px;
    margin: auto;
  }

  .circular-progress {
    width: 100%;
    height: 100%;
  }

  .circular-bg {
    fill: none;
    stroke: #eee;
    stroke-width: 10;
  }

  .circular-progress-label {
    position: absolute;
    width: 100%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
  }

  .circular-progress-big-number {
    font-size: 48px;
    line-height: 1;
  }

  .small-text {
    font-size: 24px;
    vertical-align: bottom;
  }

  .circular-bar {
    fill: none;
    stroke: #4990e2;
    stroke-width: 10;
    stroke-dasharray: 282.6; /* 2 * pi * 45 */
    stroke-dashoffset: var(--stroke-dashoffset-end, 282.6);
    transform-origin: center;
    transform: rotate(-90deg);
    /* animation: progress 1s ease-out forwards; */
  }

  @keyframes progress {
    to {
      stroke-dashoffset: var(--stroke-dashoffset-end, 282.6);
    }
  }
}
